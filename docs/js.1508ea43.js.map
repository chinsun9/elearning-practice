{"version":3,"sources":["js/index.js"],"names":["video","document","querySelector","timeView","playpausebtn","progress","progressBar","quizOverlay","continueBtn","volumeBar","updateTimeString","currentTimeFormat","Math","floor","currentTime","toHHMMSS","videoDuration","duration","newString","innerHTML","maxTime","console","log","handlePlayPause","isPlay","play","loopUpdateTimeString","setInterval","pause","clearInterval","handleProgress","percent","style","flexBasis","quizStep","quiz1Time","display","scrub","e","scrubTime","offsetX","offsetWidth","addEventListener","mousedown"],"mappings":";AAAA,IAAMA,EAAQC,SAASC,cAAc,SAC/BC,EAAWF,SAASC,cAAc,+BAClCE,EAAeH,SAASC,cAAc,kCACtCG,EAAWJ,SAASC,cAAc,aAClCI,EAAcL,SAASC,cAAc,qBACrCK,EAAcN,SAASC,cAAc,iBACrCM,EAAcP,SAASC,cAAc,gCACrCO,EAAYR,SAASC,cAAc,oBAEnCQ,EAAmB,WACfC,IAAAA,EAAoB,GAAGC,OAAAA,KAAKC,MAAMb,EAAMc,cAAeC,WACvDC,EAAgB,GAAGJ,OAAAA,KAAKC,MAAMb,EAAMiB,WAAYF,WAChDG,EAAeP,GAAAA,OAAAA,EAAuBK,OAAAA,OAAAA,GAExCb,EAASgB,WAAaD,IACtBf,EAASgB,UAAYD,EACrBE,EAAUA,EAAUpB,EAAMc,YAAcd,EAAMc,YAAcM,EAC5DC,QAAQC,IAAeF,UAAAA,KAIzBG,EAAkB,WACpBC,GAAUA,EAEVH,QAAQC,IAAItB,EAAMc,YAAad,EAAMiB,UAEjCO,GACApB,EAAae,UAAY,QACzBnB,EAAMyB,OACNC,EAAuBC,YAAYjB,EAAkB,OAGrDN,EAAae,UAAY,OACzBnB,EAAM4B,QACNC,cAAcH,KAIhBI,EAAiB,WACbC,IAAAA,EAAW/B,EAAMc,YAAcd,EAAMiB,SAAY,IACvDX,EAAY0B,MAAMC,UAAeF,GAAAA,OAAAA,EAFR,KAKR,IAAbG,GAAkBtB,KAAKC,MAAMb,EAAMc,cAAgBqB,IACnDD,EAAW,EACX3B,EAAYyB,MAAMI,QAAU,QAC5Bb,MAIFc,EAAQ,SAACC,GACLC,IAAAA,EAAaD,EAAEE,QAAUnC,EAASoC,YAAezC,EAAMiB,SAC7DiB,EAAW,EAEPd,EAAUmB,EACVlB,QAAQC,IAAI,UAEZtB,EAAMc,YAAcyB,GAK5BvC,EAAM0C,iBAAiB,aAAcZ,GACrC1B,EAAasC,iBAAiB,QAASnB,GACvClB,EAASqC,iBAAiB,QAASL,GACnChC,EAASqC,iBAAiB,YAAa,SAAAJ,GACnCK,GAAaN,EAAMC,KAEvBjC,EAASqC,iBAAiB,YAAa,WAAMC,OAAAA,GAAY,IACzDtC,EAASqC,iBAAiB,UAAW,WAAMC,OAAAA,GAAY,IACvDnC,EAAYkC,iBAAiB,QAAS,WAClCnC,EAAYyB,MAAMI,QAAU,OAC5Bb,MAIJ,IAAIW,EAAW,EACXS,GAAY,EACVR,EAAY,EACdf,EAAU,EACVI,GAAS,EACbD,IACA,IAAIG,EAAuBC,YAAYjB,EAAkB","file":"js.1508ea43.js","sourceRoot":"..","sourcesContent":["const video = document.querySelector('video');\r\nconst timeView = document.querySelector(\"#toolbar > div.current-time\")\r\nconst playpausebtn = document.querySelector(\"#toolbar > button:nth-child(1)\")\r\nconst progress = document.querySelector('.progress');\r\nconst progressBar = document.querySelector('.progress__filled');\r\nconst quizOverlay = document.querySelector(\"#quiz-overlay\")\r\nconst continueBtn = document.querySelector(\"#quiz-overlay > div > button\")\r\nconst volumeBar = document.querySelector(\"#toolbar > input\")\r\n\r\nconst updateTimeString = () => {\r\n    const currentTimeFormat = `${Math.floor(video.currentTime)}`.toHHMMSS()\r\n    const videoDuration = `${Math.floor(video.duration)}`.toHHMMSS()\r\n    const newString = `${currentTimeFormat} / ${videoDuration}`\r\n\r\n    if (timeView.innerHTML != newString) {\r\n        timeView.innerHTML = newString\r\n        maxTime = maxTime < video.currentTime ? video.currentTime : maxTime\r\n        console.log(`maxtime`, maxTime)\r\n    }\r\n}\r\n\r\nconst handlePlayPause = () => {\r\n    isPlay = !isPlay\r\n\r\n    console.log(video.currentTime, video.duration)\r\n\r\n    if (isPlay) {\r\n        playpausebtn.innerHTML = 'pause'\r\n        video.play()\r\n        loopUpdateTimeString = setInterval(updateTimeString, 200)\r\n    }\r\n    else {\r\n        playpausebtn.innerHTML = 'play'\r\n        video.pause()\r\n        clearInterval(loopUpdateTimeString)\r\n    }\r\n}\r\n\r\nconst handleProgress = () => {\r\n    const percent = (video.currentTime / video.duration) * 100;\r\n    progressBar.style.flexBasis = `${percent}%`;\r\n\r\n    // 여기가 퀴즈 보내는 ...\r\n    if (quizStep === 0 && Math.floor(video.currentTime) == quiz1Time) {\r\n        quizStep = 1\r\n        quizOverlay.style.display = 'block'\r\n        handlePlayPause()\r\n    }\r\n}\r\n\r\nconst scrub = (e) => {\r\n    const scrubTime = (e.offsetX / progress.offsetWidth) * video.duration;\r\n    quizStep = 0\r\n\r\n    if (maxTime < scrubTime) {\r\n        console.log('이동불가. ')\r\n    } else {\r\n        video.currentTime = scrubTime;\r\n    }\r\n}\r\n\r\n// btn interaction\r\nvideo.addEventListener('timeupdate', handleProgress);\r\nplaypausebtn.addEventListener('click', handlePlayPause)\r\nprogress.addEventListener('click', scrub);\r\nprogress.addEventListener('mousemove', e => {\r\n    mousedown && scrub(e);\r\n});\r\nprogress.addEventListener('mousedown', () => mousedown = true);\r\nprogress.addEventListener('mouseup', () => mousedown = false);\r\ncontinueBtn.addEventListener('click', () => {\r\n    quizOverlay.style.display = 'none'\r\n    handlePlayPause();\r\n});\r\n\r\n// init\r\nlet quizStep = 0\r\nlet mousedown = false;\r\nconst quiz1Time = 2\r\nlet maxTime = 0;\r\nlet isPlay = true\r\nhandlePlayPause()\r\nlet loopUpdateTimeString = setInterval(updateTimeString, 200)\r\n"]}